<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from qcqp.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="qcqp" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>qcqp</refname>
    <refpurpose>Solves a Linear and Quadratic Constrainted Quadratic problem.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Syntax</title>
   <synopsis>
   xopt = qcqp(x,H,f)
   xopt = qcqp(x,H,f,Q,c,r,A,b)
   xopt = qcqp(x,H,f,Q,c,r,A,b,Aeq,beq)
   xopt = qcqp(x,H,f,Q,c,r,A,b,Aeq,beq,lb,ub)
   [xopt,fopt,lambda,exitflag] = qcqp( ... )
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
        <varlistentry>
            <term>x :</term>
            <listitem><para> a matrix of double, represents initial point.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>H :</term>
            <listitem><para> a symmetric matrix of double, represents coefficients of quadratic terms in the quadratic problem.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>f :</term>
            <listitem><para> a vector of double, represents coefficients of linear terms in the quadratic problem</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>Q :</term>
            <listitem><para> a [n x n] . q matrix of double, represents coefficients of quadratic terms in the quadratic constraints. x'.Q.x + c'.x &lt;= r</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>c :</term>
            <listitem><para> a q x n matrix of double, represents coefficients of  linear terms in the quadratic problem. x'.Q.x + c'.x &lt;= r</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>r :</term>
            <listitem><para> a vector of double, represents the linear constants in the inequality constraints x'.Q.x + c'.x &lt;= r.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>A :</term>
            <listitem><para> a matrix of double, represents the linear coefficients in the inequality constraints A⋅x ≤ b.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>b :</term>
            <listitem><para> a vector of double, represents the linear terms in the inequality constraints A⋅x ≤ b.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>Aeq :</term>
            <listitem><para> a matrix of double, represents the linear coefficients in the equality constraints Aeq⋅x = beq.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>beq :</term>
            <listitem><para> a vector of double, represents the linear terms in the equality constraints Aeq⋅x = beq.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>lb :</term>
            <listitem><para> a vector of double, contains lower bounds of the variables. The default value is 0.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>ub :</term>
            <listitem><para> a vector of double, contains upper bounds of the variables. The default value is %inf.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>xopt :</term>
            <listitem><para> a vector of double, the computed solution of the optimization problem.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>fopt :</term>
            <listitem><para> a double, the value of the function at x.</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>lambda :</term>
            <listitem><para> a vector of double, final estimation of the Lagrange multipliers</para></listitem>
        </varlistentry>
        <varlistentry>
            <term>exitflag :</term>
            <listitem><para> a double, this output parameter tells what happened in this subroutine, according to the following conventions.</para></listitem>
        </varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
Search the minimum of a linear and quadratic constrained quadratic optimization problem specified by :
   </para>
   <para>
Min x’.H.x + f’.x
   </para>
   <para>
Subject to
   </para>
   <para>
A’x &lt;= b
   </para>
   <para>
Aeq x = beq
   </para>
   <para>
x’.Q.x + c’x &lt;= r
   </para>
   <para>
lb &lt;= x &lt;= ub
   </para>
   <para>
The routine calls ALGENCAN for solving the quadratic problem, ALGENCAN is a library written in fortran.
   </para>
   <para>
For more details on exitflag see the CLP documentation, go to https://www.ime.usp.br/~egbirgin/tango/
   </para>
   <para>
<itemizedlist>
<listitem> exitflag=0 : Optimal Solution Found </listitem>
<listitem> exitflag=1 : Maximum Number of Output Iterations Exceeded. Output may not be optimal </listitem>
<listitem> exitflag=2 : Maximum Number of Total number of Inner Iterations Exceeded. Output may not be optimal </listitem>
<listitem> exitflag=3 : Maximum Number of Total number of Functional Evaluations Exceeded. Output may not be optimal </listitem>
<listitem> exitflag=4 : The algorithm stopped by ``lack of feasibility progress'', i.e., the current point is infeasible </listitem>
</itemizedlist>
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
//Reference : http://www.minlplib.org/nvs10.html
// var i1 := 1, >= 0, <= 200;
// var i2 := 1, >= 0, <= 200;
// minimize obj: 7*i1^2 + 6*i2^2 - 35*i1 - 80.4*i2;
// subject to
// e1: (-9*i1^2) - 10*i1*i2 - 8*i2^2 >= -583;
// e2: (-6*i1^2) - 8*i1*i2 - 6*i2^2 >= -441;
H = [7 0;0 6];
f = [-35 ; -80.4];
Q = [[9 5;5 8];[3 4;4 3]];
c = [0 0;0 0];
r = [583;441];
x = [1;1];
lb = [0;0];
ub = [200;200];
[xopt,fopt] = qcqp(x,H,f,Q,c,r,[],[],[],[],lb,ub);
// Press ENTER to continue

   ]]></programlisting>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
// var i1 integer := 1, >= 0, <= 200;
// var i2 integer := 1, >= 0, <= 200;
// var i3 integer := 1, >= 0, <= 200;
// minimize obj: 7*i1^2 + 6*i2^2 - 15.8*i1 - 93.2*i2 + 8*i3^2 - 6*i3*i1 + 4*i3*i2
//      - 63*i3;
// subject to
// e1: (-9*i1^2) - 10*i1*i2 - 8*i2^2 - 5*i3^2 - 6*i3*i1 - 10*i3*i2 >= -1000;
// e2: (-6*i1^2) - 8*i1*i2 - 6*i2^2 - 4*i3^2 - 2*i3*i1 - 2*i3*i2 >= -550;
// e3: (-9*i1^2) - 6*i2^2 - 8*i3^2 + 2*i2*i1 + 2*i3*i2 >= -340;
x = [1 ; 1; 1];
lb = [0 ; 0; 0];
ub = [200 ; 200 ; 200];
H = [7 0 -3;
0 6 2;
-3 2 8];
f = [-15.8 ; -93.2 ; -63];
Q = [
[9 5 3;
5 8 5;
3 5 8];
[3 4 1;
4 6 1;
1 1 4];
[9 -1 0;
-1 6 -1;
0 -1 8];
];
c = zeros(3,3);
r = [1000;550;340];
[xopt,fopt,lambda,exitflag] = qcqp(x,H,f,Q,c,r,[],[],[],[],lb,ub);
// Press Enter to continue

   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Adarsh Shah</member>
   </simplelist>
</refsection>
</refentry>
